# C-lesson

[] 2.1 　　: プレゼン
[] 2.2 問1 : プレゼン
[] 2.2 問2 : プレゼン

[] 3.1 (1): 口頭説明
[] 3.1 (2): 口頭説明

[] 3.2 (1): 口頭説明
[] 3.2 (2): 口頭説明
[] 3.2 (3): 口頭説明
[] 3.2 (4): 口頭説明

[o] 3.3 (1)
[o] 3.3 (2): elseはできるだけ書かないですむように

[o] 3.4 (1)
[o] 3.4 (2)
	- 型宣言部分では関数は使わない(Cの規約違反になる)
	- 型宣言で，配列の大きさ指定に変数は使わない(Cの規約違反になる)

[o] 4(1)
	- fopenエラーが出たら，ただちにプログラム終了
	- elseはできるだけ書かないですむように(fRPopen)
[o] 4(2)
[o] 4(3)

[o] 5(1)
[] 5(2)
	2回目
	- #ifdef #else の分岐でほとんど同じ命令文を書いているのはあまりよくない。(違うのはファイルポインタのみ)。必要最小限の分岐ですむ工夫をする
	1回目
	- できるかぎり +=, -=, *=, /= といった表記を使う(実行時間も早くなることが多い)
	- main()でファイルを開いて読み込んで，そのデータを関数に渡すほうが簡潔なプログラムになる
	- #ifdefではprintfとfprintfは切り替えない。出力先ファイルポインタの切り替えに使う。
[] 5(3)
	- 同上

[o] 6(1)
	- 4(1)参照
[] 6(2)
	- こちらは
	- 5(2)参照

[o] 7(1)
[o] 7(2)(a)
[] 7(2)(b)
	2回目
	- 引数無しで実行するとsegmentation faultが出るのはよくないです。
	- Makefileを書きましょう
	1回目
	- できるかぎり +=, -=, *=, /= といった表記を使う(実行時間も早くなることが多い)
[o] 7(2)(c)
	- できるかぎり +=, -=, *=, /= といった表記を使う(実行時間も早くなることが多い)
	- 解析解に基づいてx,yを求めるのではなく，離散計算による積分計算でx,yを求める